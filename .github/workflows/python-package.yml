name: Publish Python distributions to PyPI and TestPyPI

on:
  pull_request:
    push:
      branches: [master]
      tags: ["v*"]
  workflow_dispatch:

jobs:
  build:
    name: Build Python distribution
    strategy:
      fail-fast: false
      matrix:
        os:
          - macos-latest
          # Enable once all are done and issue resolved for both os
          # - ubuntu-latest
          # - windows-latest
        # python-version: ["3.8", "3.9", "3.10", "3.11", "3.12"]
        python-version: ["3.8", "3.9", "3.10", "3.11"]
    runs-on: ${{ matrix.os }}
    steps:
      # HACK https://github.com/actions/cache/issues/315
      - name: Enable msys binaries
        if: ${{ runner.os == 'Windows' }}
        run: |
          echo "C:\msys64\usr\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
          rm C:\msys64\usr\bin\bash.exe

      - uses: actions/checkout@main

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install poetry
          poetry install --with dev -v

      - name: Run pytest
        run: poetry run poe test --cov=./ --cov-report=xml -ra .

  publish:
      name: Publish Python distribution
      runs-on: ubuntu-latest
      needs:
        - build
      steps:
          - uses: actions/checkout@main

          - name: Initialize Python 3.10
            uses: actions/setup-python@v4
            with:
              python-version: 3.10

          - name: Install dependencies
            shell: bash
            run: |
              python -m pip install poetry

          - name: Build dist
            run: |
              poetry build
          
          - name: Publish distribution ðŸ“¦ to Test PyPI
            uses: pypa/gh-action-pypi-publish@master
            with:
              user: __token__
              password: ${{ secrets.TEST_PYPI_TOKEN }}
              repository_url: https://test.pypi.org/legacy/

          - name: Publish distribution ðŸ“¦ to PyPI
            uses: pypa/gh-action-pypi-publish@master
            with:
              user: __token__
              password: ${{ secrets.PYPI_TOKEN }}

          - name: Checkout code
            uses: actions/checkout@v2

          - name: Create Release
            id: create_release
            uses: actions/create-release@v1
            env:
              GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
            with:
              tag_name: v${{ github.ref }}
              release_name: Release v${{ github.ref }}
              body: |
                Changes in this Release
                - Bug Fixes
              draft: false
              prerelease: false